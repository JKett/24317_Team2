<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lockTrackBarButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAHVQTFRF////
        AAAAxcXF8/Pz2NjYvLy8lZWVjo6OaWlp5+fn/Pz8+fn5Ojo63d3dwcHBeHh47e3tTExMtbW1qampGRkZ
        nJycVlZWz8/Ppqam2trabm5uRUVFUVFRg4ODEhISW1tbPDw8JiYmCwsLfX19IiIiMjIyiYmJpf6D6wAA
        BkJJREFUeF7tnWtb4zgMhaEsQ5u2lF6mAWagMED//09cnpnD7ra25IscR8nq/UgdW4f4blm5MAzDMAzD
        MAzDMAzDMAyW+ayd3G422831pH24avDXcTBv71cvvy5PeT8cN0skGDbt8QOafOzvB67ydgolDLubwYpc
        PkFDkI/tEJtlu4b5cTzd4bmh0L7A8njervDsEFimvb8vbvC4ft5gcTq3yEE3E1ibxWEAVXUFW3PR/hpn
        OxiazwpZ6eQaVopYKK6pN7BRygPyU0fEFC0SpY3xJ8wrwQZ5quIHjCvDFrkqoqxAhRLz5mkcyirqAWaV
        RFV3E70STELRoLGFSaVRM/S3MKg4Hyigb65gTwcomaPGd6Ov68P0cbpPGFiuUUav3MMYnsXNZIYHPmmW
        m8hVloKmOIMpHIutz9CHI37m+InEPRKuclN6P3TzijQ0vQ/8GxhCsv9P5fQQXlH2vZUKM0gmSEcTqqtP
        SNcT32AGwTTmBYSGU74SdExgKLxHsgANP95MkawX+G2LFqnC8ENHjy+xgQl+Uo6U2MbY48zmO0zwknZm
        xkrsb9jnNkf/QppYuIr6DWmqw3WC6RNKZiPrGUmq8wgDPByRJIHmGc96iO+zyoLiPSyQIoklHvbQU19z
        i+I95PXvzNiDFJWhK2luz0D3XP1UUxTu8gsJkqGPHns5HqabTf6Chzz9z2rYUugNNiTIgH6Jc6SoCdkM
        vyNBDmRL7KMhksOXZI5FzgMl/7ZM5ijaQbSzcodMHB6RoCIPKNpBdmhEufn1sDlMbrDIVnPkqI/fK0K2
        GPyeCdmb1vd7o46bDvg9E7Ih1nfRpE4MpbMPZOMQ3rQrDbUTLD2dXiCfc+rvDFOWSIdmymWl/rk+tR+f
        untxDrWbUX/Ip+ZX0h6B2pKqv1dzfrvgC+nmJrWLXn/9hIIdTGEIU1gPFOxgCkOYwnqgYAdTGMIU1gMF
        O5jCEKawHijYwRSGMIX1QMEOpjCEKawHCnYwhSFMYT1QsIMpDJGjsLnqAPIIeIkEv8nw0U5WeP0ov10t
        4H2VemaUqDDoSV+BXdotuzSFXdwKzCDJyyBJIRfcpyprGBRDisLyF1ezSXC3T1DIOmHXJv4EN15hh7cC
        c4BVYeIVlorgUIjoQ+p4he/4RQnRnQ3VuJwzYNIvpS9gVxBqCHdacme3j3OJna9Sr8bxiWLczPsh2kfD
        P01xXa2KxMIpSbRC/yDgurUNV6G3gXn8kAas8GJ5vhza+Zx0hqzws0Pd/+tj/bz3T4gKKHw+TmbzppnP
        bksE9khSGINY4fqk6k8oR71o1Cl0lq3SxbQyhS+eCxx34egAHLoU+i8UNKKaqkrhD+RxTiN5i6oUkneM
        JNN5TQoZP2ZBd6NIIXudID147heKFLJuzPnhV/UofEEGBMyFax49CgPROrIncHoUBizJXlnrURi4jhoT
        FsqLHoV4noI8VQuhRuEOz5MgXTJqFAaDbCBdMlZLk7GehiRgyQhGi8AtuBGM+IFr4dSVtSB6FPKxbccw
        877cIwcvo1g9cbemx7ECZgYMycm5KoXkeW1+HVWmkNrI2OPnLHQpvFx7KupcFjlfmULPhlv+OPEHdQrP
        fR+kH8hRqPAs8KE4sLw+hWctUey9ok6hM7ORHiCqU+h4aUkdAdUpdLw7mMiUUWhT6Inil71u+oM2hZ51
        cEwUfAZtCj3HM0JPOWUK35HLCfgtE2UKvWGAmbDBEShT6D0Glrk7KlOITE7J3gz+jS6FROjlEa0PiXs8
        otm3LoXElTPR7FuVQtIbQ3LNSJVC8m4EdRciBlUKyVChZNzZCDQpZE4ukCIHTQqZCIWC3RpNCpmjGcGG
        myaFyMEH/2EZFkUK2W9J5E9rFClkLybnT2sUKWRdFbIdFRQpDFwUzL7WqEfh+D0VApaMwNsEz1NkHwOr
        Ufg/8Gsbv9dX4JOR2V/516PQG4DiH/Kn3ooUfq7xpwSSWCmqFHaCKUzGFFanuEJ1USOKfycmf5nTEYGZ
        RAbIWAsdfJFK7MRUlg4+MSL1nShMFx+kyp5BdkHGt2XDyA40y9LRd+EUdaddfXZai8TX7r6rPVfRFt9g
        TTcsV0JnLSm7py560VNm7aQ32u7lGYZhGIZhGIZhGIZhGIZhGIahlIuLvwGtrGifsrVx8gAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="lockTrackBarButton.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>